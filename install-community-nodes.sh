#!/bin/bash
set -e

# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.
# n8n –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –Ω–æ–¥—ã, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç.

echo "INFO: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ community-–Ω–æ–¥ –¥–ª—è n8n..."

npm install n8n-nodes-telegram
npm install n8n-nodes-ssh

echo "SUCCESS: Community-–Ω–æ–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."```

#### `backup.sh` (–ï–¥–∏–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –±—ç–∫–∞–ø–∞)
*   **–ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ:** –¢–µ–ø–µ—Ä—å –±—ç–∫–∞–ø–∏—Ç –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã, –∞—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –≤ `tar.gz`, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Telegram –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ä–æ—Ç–∞—Ü–∏—é —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤.

```bash
#!/bin/bash
set -euo pipefail

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
BACKUP_DIR="/opt/n8n-stack/backups"
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M")
BACKUP_FILENAME="stack-backup-${TIMESTAMP}.tar.gz"
BACKUP_PATH="${BACKUP_DIR}/${BACKUP_FILENAME}"
TEMP_DIR=$(mktemp -d)
ENV_FILE="/opt/n8n-stack/.env"

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–æ–∫–µ–Ω–∞–º
if [ -f "$ENV_FILE" ]; then
    export $(grep -v '^#' "$ENV_FILE" | xargs)
fi

# --- –§–£–ù–ö–¶–ò–ò ---

log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

send_telegram_message() {
  if [ -z "${TELEGRAM_BOT_TOKEN}" ] || [ -z "${TELEGRAM_USER_ID}" ]; then
    log "–ü—Ä–æ–ø—É—â–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Telegram, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
    return
  fi
  curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
    -d chat_id="${TELEGRAM_USER_ID}" \
    -d text="$1" \
    -d parse_mode="Markdown" > /dev/null
}

send_telegram_document() {
    if [ -z "${TELEGRAM_BOT_TOKEN}" ] || [ -z "${TELEGRAM_USER_ID}" ]; then
      log "–ü—Ä–æ–ø—É—â–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Telegram, —Ñ–∞–π–ª –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω."
      return
    fi
    curl -s -F "chat_id=${TELEGRAM_USER_ID}" \
        -F document=@"${2}" \
        -F caption="${1}" \
        "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" > /dev/null
}

cleanup() {
  log "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${TEMP_DIR}"
  rm -rf "${TEMP_DIR}"
}
trap cleanup EXIT

# --- –û–°–ù–û–í–ù–û–ô –ü–†–û–¶–ï–°–° ---

log "üöÄ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
mkdir -p "$BACKUP_DIR"

# 1. –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
log "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–∞ PostgreSQL..."
docker compose exec -T postgres pg_dumpall -U "${POSTGRES_USER}" > "${TEMP_DIR}/postgres_dump.sql"

# 2. –ë—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö n8n (–∫–æ–Ω—Ñ–∏–≥–∏, workflows)
log "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö n8n..."
cp -r /opt/n8n-stack/data/n8n "${TEMP_DIR}/n8n_data"

# 3. –ë—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö Redis
log "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ RDB —Ñ–∞–π–ª–∞ Redis..."
docker compose exec redis redis-cli SAVE
cp /opt/n8n-stack/data/redis/dump.rdb "${TEMP_DIR}/redis_dump.rdb"

# 4. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env
log "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..."
cp "$ENV_FILE" "${TEMP_DIR}/"

# 5. –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
log "üóúÔ∏è –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ ${BACKUP_PATH}..."
tar -czf "${BACKUP_PATH}" -C "${TEMP_DIR}" .

# 6. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
log "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ –≤ Telegram..."
send_telegram_document "‚úÖ –ë—ç–∫–∞–ø —Å—Ç–µ–∫–∞ *${TIMESTAMP}* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω." "${BACKUP_PATH}"

# 7. –†–æ—Ç–∞—Ü–∏—è —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (—É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
log "üîÑ –†–æ—Ç–∞—Ü–∏—è —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
find "${BACKUP_DIR}" -type f -name "*.tar.gz" -mtime +7 -delete

log "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω."
