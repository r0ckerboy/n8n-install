#!/bin/bash

#================================================================================================
#
#   –°–∫—Ä–∏–ø—Ç "–ö–æ—Å–º–æ–¥—Ä–æ–º –≤ –ö–æ—Ä–æ–±–∫–µ"
#   –ê–≤—Ç–æ—Ä: –¢–≤–æ–π –±—Ä–æ-–Ω–µ–π—Ä–æ—Å–µ—Ç—å
#   –í–µ—Ä—Å–∏—è: 1.0 (–§–∏–Ω–∞–ª—å–Ω–∞—è)
#   –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç-–∑–∞–≤–æ–¥–∞ –Ω–∞ —á–∏—Å—Ç—ã–π —Å–µ—Ä–≤–µ—Ä Ubuntu.
#   –í–∫–ª—é—á–∞–µ—Ç: Docker, Docker Compose, Traefik (—Å –∞–≤—Ç–æ-SSL), n8n, Postiz,
#   –∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫—ç—à–∏ –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö.
#
#================================================================================================

# --- ASCII Art & Intro ---
echo -e '
\033[0;32m
      _______________
     /_______________/|
    /_______________//|
   /_______________///|  –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É "–ö–æ—Å–º–æ–¥—Ä–æ–º–∞ –≤ –ö–æ—Ä–æ–±–∫–µ"!
  /_______________////|  –≠—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è, –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è
 /_______________/////|  –≤–µ—Ä—Å–∏—è. –ü—Ä–∏—Å—Ç–µ–≥–Ω–∏—Å—å.
/________________////
|_______________|/
\033[0m
'

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ü–≤–µ—Ç–∞ ---
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# --- –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker –∏ Docker Compose ---
install_docker() {
    if ! command -v docker &> /dev/null || ! command -v docker-compose &> /dev/null; then
        echo -e "${YELLOW}Docker –∏–ª–∏ Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...${NC}"
        apt-get update
        apt-get install -y ca-certificates curl gnupg lsb-release
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ GPG –∫–ª—é—á–∞ Docker
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        
        apt-get update
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞
        apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞
        if ! command -v docker &> /dev/null || ! command -v docker-compose &> /dev/null; then
            echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker. –ü—Ä–µ—Ä—ã–≤–∞—é –æ–ø–µ—Ä–∞—Ü–∏—é.${NC}"
            exit 1
        fi
        echo -e "${GREEN}‚úÖ Docker –∏ Docker Compose —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${NC}"
    else
        echo -e "${GREEN}‚úÖ Docker –∏ Docker Compose —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ.${NC}"
    fi
}

# --- –ì–ª–∞–≤–Ω—ã–π –±–ª–æ–∫ —Å–∫—Ä–∏–ø—Ç–∞ ---
main() {
    # --- –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∏ ---
    echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...${NC}"
    if [ "$(id -u)" != "0" ]; then
       echo -e "${RED}‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å –ø—Ä–∞–≤–∞–º–∏ root –∏–ª–∏ —á–µ—Ä–µ–∑ sudo.${NC}" 1>&2
       exit 1
    fi
    install_docker

    # --- –®–∞–≥ 2: –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö ---
    echo -e "\n${YELLOW}‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—É—Å–∫–∞. –í–≤–æ–¥–∏ —Ç–æ–ª—å–∫–æ –¥–æ–º–µ–Ω—ã, –±–µ–∑ https:// ${NC}"
    read -p "‚û°Ô∏è –í–≤–µ–¥–∏ –¥–æ–º–µ–Ω –¥–ª—è n8n (–Ω–∞–ø—Ä–∏–º–µ—Ä, n8n.your-domain.com): " N8N_HOST
    read -p "‚û°Ô∏è –í–≤–µ–¥–∏ –¥–æ–º–µ–Ω –¥–ª—è Postiz (–Ω–∞–ø—Ä–∏–º–µ—Ä, postiz.your-domain.com): " POSTIZ_HOST
    read -p "‚û°Ô∏è –í–≤–µ–¥–∏ —Å–≤–æ–π email (–Ω—É–∂–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –æ—Ç Let's Encrypt): " LETSENCRYPT_EMAIL
    
    if [ -z "$N8N_HOST" ] || [ -z "$POSTIZ_HOST" ] || [ -z "$LETSENCRYPT_EMAIL" ]; then
        echo -e "${RED}‚ùå –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã. –ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞.${NC}"
        exit 1
    fi

    # --- –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ---
    echo -e "\n${YELLOW}üõ†Ô∏è –°–æ–∑–¥–∞—é —Å–±–æ—Ä–æ—á–Ω—ã–π —Ü–µ—Ö: –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    mkdir -p /opt/content-factory
    cd /opt/content-factory

    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–¥-–ø–∞–ø–æ–∫
    mkdir -p traefik_data/logs data/{n8n,postgres_n8n,redis_n8n,postiz,postgres_postiz,redis_postiz} videos

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ, –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
    POSTGRES_N8N_PASSWORD=$(openssl rand -base64 16 | tr -d "=+/" | cut -c1-16)
    POSTGRES_POSTIZ_PASSWORD=$(openssl rand -base64 16 | tr -d "=+/" | cut -c1-16)
    POSTIZ_ADMIN_PASSWORD=$(openssl rand -base64 16 | tr -d "=+/" | cut -c1-16)

    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏
    cat <<EOF > .env
# --- –û–ë–©–ò–ï ---
TZ=Europe/Moscow

# --- TRAEFIK ---
TRAEFIK_ACME_EMAIL=${LETSENCRYPT_EMAIL}

# --- N8N ---
N8N_HOST=${N8N_HOST}
POSTGRES_N8N_DB=n8n
POSTGRES_N8N_USER=n8n
POSTGRES_N8N_PASSWORD=${POSTGRES_N8N_PASSWORD}

# --- POSTIZ ---
POSTIZ_HOST=${POSTIZ_HOST}
POSTIZ_ADMIN_EMAIL=${LETSENCRYPT_EMAIL}
POSTIZ_ADMIN_PASSWORD=${POSTIZ_ADMIN_PASSWORD}
POSTGRES_POSTIZ_DB=postiz
POSTGRES_POSTIZ_USER=postiz
POSTGRES_POSTIZ_PASSWORD=${POSTGRES_POSTIZ_PASSWORD}
EOF

    # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Traefik
    cat <<EOF > traefik_data/traefik.yml
global:
  checkNewVersion: true
  sendAnonymousUsage: false

log:
  level: INFO
  filePath: "/logs/traefik.log"

api:
  dashboard: true
  insecure: true # –í–Ω–∏–º–∞–Ω–∏–µ: –¥–∞—à–±–æ—Ä–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080. –í –ø—Ä–æ–¥–µ –ª—É—á—à–µ –∑–∞—â–∏—Ç–∏—Ç—å!

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: ":443"

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false

certificatesResolvers:
  letsencrypt:
    acme:
      email: "${LETSENCRYPT_EMAIL}"
      storage: "/letsencrypt/acme.json"
      httpChallenge:
        entryPoint: web
EOF

    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π docker-compose.yml
    cat <<EOF > docker-compose.yml
version: '3.9'

services:
  # --- –°–ï–¢–ï–í–û–ô –®–õ–Æ–ó: TRAEFIK ---
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080" # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–∞—à–±–æ—Ä–¥—É Traefik
    volumes:
      - ./traefik_data/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik_data/letsencrypt:/letsencrypt
      - ./traefik_data/logs:/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy
    labels:
      - "traefik.enable=true"

  # --- –ö–û–ú–ê–ù–î–ù–´–ô –¶–ï–ù–¢–†: N8N ---
  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: unless-stopped
    environment:
      - N8N_HOST=\${N8N_HOST}
      - WEBHOOK_URL=https://\${N8N_HOST}/
      - GENERIC_TIMEZONE=\${TZ}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres_n8n
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=\${POSTGRES_N8N_DB}
      - DB_POSTGRESDB_USER=\${POSTGRES_N8N_USER}
      - DB_POSTGRESDB_PASSWORD=\${POSTGRES_N8N_PASSWORD}
      - QUEUE_BULL_REDIS_HOST=redis_n8n
      - QUEUE_BULL_REDIS_PORT=6379
    volumes:
      - ./data/n8n:/home/node/.n8n
      - ./videos:/videos # –û–±—â–∞—è –ø–∞–ø–∫–∞ —Å –≤–∏–¥–µ–æ
    networks:
      - proxy
      - internal
    depends_on:
      - postgres_n8n
      - redis_n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(\`\${N8N_HOST}\`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  postgres_n8n:
    image: postgres:15
    container_name: postgres_n8n
    restart: unless-stopped
    environment:
      - POSTGRES_DB=\${POSTGRES_N8N_DB}
      - POSTGRES_USER=\${POSTGRES_N8N_USER}
      - POSTGRES_PASSWORD=\${POSTGRES_N8N_PASSWORD}
    volumes:
      - ./data/postgres_n8n:/var/lib/postgresql/data
    networks:
      - internal

  redis_n8n:
    image: redis:7
    container_name: redis_n8n
    restart: unless-stopped
    networks:
      - internal

  # --- –û–¢–î–ï–õ –ü–£–ë–õ–ò–ö–ê–¶–ò–ò: POSTIZ ---
  postiz:
    image: valkeya/postiz:latest
    container_name: postiz
    restart: unless-stopped
    environment:
      - APP_URL=https://\${POSTIZ_HOST}
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres_postiz
      - DB_PORT=5432
      - DB_DATABASE=\${POSTGRES_POSTIZ_DB}
      - DB_USERNAME=\${POSTGRES_POSTIZ_USER}
      - DB_PASSWORD=\${POSTGRES_POSTIZ_PASSWORD}
      - REDIS_HOST=redis_postiz
      - REDIS_PORT=6379
    volumes:
      - ./data/postiz:/app/storage
    networks:
      - proxy
      - internal
    depends_on:
      - postgres_postiz
      - redis_postiz
    command: >
      bash -c "php artisan migrate --force &&
               (php artisan p:user:create --name=admin --email=${LETSENCRYPT_EMAIL} --password=${POSTIZ_ADMIN_PASSWORD} --role=Admin || true) &&
               php artisan serve --host=0.0.0.0 --port=8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postiz.rule=Host(\`\${POSTIZ_HOST}\`)"
      - "traefik.http.routers.postiz.entrypoints=websecure"
      - "traefik.http.routers.postiz.tls.certresolver=letsencrypt"
      - "traefik.http.services.postiz.loadbalancer.server.port=8000"

  postgres_postiz:
    image: postgres:15
    container_name: postgres_postiz
    restart: unless-stopped
    environment:
      - POSTGRES_DB=\${POSTGRES_POSTIZ_DB}
      - POSTGRES_USER=\${POSTGRES_POSTIZ_USER}
      - POSTGRES_PASSWORD=\${POSTGRES_POSTIZ_PASSWORD}
    volumes:
      - ./data/postgres_postiz:/var/lib/postgresql/data
    networks:
      - internal

  redis_postiz:
    image: redis:7
    container_name: redis_postiz
    restart: unless-stopped
    networks:
      - internal

  # --- –°–ë–û–†–û–ß–ù–´–ô –¶–ï–•: SHORT VIDEO MAKER (—à–∞–±–ª–æ–Ω –¥–ª—è –∑–∞–ø—É—Å–∫–∞) ---
  short-video-maker:
    image: ghcr.io/ouo-app/short-video-maker:latest
    volumes:
      - ./videos:/app/videos
    working_dir: /app/videos
    # –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–º–µ–µ—Ç –ø–æ—Ä—Ç–æ–≤ –∏ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ.
    # –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ n8n –∫–æ–º–∞–Ω–¥–æ–π:
    # docker-compose run --rm short-video-maker --help
    
networks:
  proxy:
    name: proxy
  internal:
    name: internal
    internal: true
EOF

    echo -e "${GREEN}‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –≤ /opt/content-factory${NC}"

    # --- –®–∞–≥ 4: –ó–∞–ø—É—Å–∫ ---
    echo -e "\n${YELLOW}üöÄ –ó–∞–ø—É—Å–∫–∞—é –¥–≤–∏–≥–∞—Ç–µ–ª–∏... –°–∫–∞—á–∏–≤–∞—é –æ–±—Ä–∞–∑—ã –∏ –ø–æ–¥–Ω–∏–º–∞—é —Å–µ—Ä–≤–∏—Å—ã. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...${NC}"
    
    docker-compose up -d

    # --- –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ ---
    SERVER_IP=$(curl -s ifconfig.me)
    echo -e "\n\n${GREEN}üéâüéâüéâ –ü–û–ï–•–ê–õ–ò! –¢–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç-–∑–∞–≤–æ–¥ –≤ –∫–æ—Å–º–æ—Å–µ! üéâüéâüéâ${NC}"
    echo -e "-----------------------------------------------------------------"
    echo -e "           ${YELLOW}!!! –í–ê–ñ–ù–û: –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì !!!${NC}"
    echo -e "–ù–∞–ø—Ä–∞–≤—å –ê-–∑–∞–ø–∏—Å–∏ –¥–ª—è —Ç–≤–æ–∏—Ö –¥–æ–º–µ–Ω–æ–≤ –Ω–∞ IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: ${YELLOW}${SERVER_IP}${NC}"
    echo -e "    - ${N8N_HOST} -> ${SERVER_IP}"
    echo -e "    - ${POSTIZ_HOST} -> ${SERVER_IP}"
    echo -e "–ö–∞–∫ —Ç–æ–ª—å–∫–æ DNS –æ–±–Ω–æ–≤–∏—Ç—Å—è, SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –±—É–¥—É—Ç –≤—ã–ø—É—â–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
    echo -e "-----------------------------------------------------------------"
    echo -e "–í–æ—Ç —Ç–≤–æ–∏ –¥–æ—Å—Ç—É–ø—ã (–±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è DNS):"
    echo -e "üîπ ${YELLOW}n8n:${NC} https://${N8N_HOST}"
    echo -e "üîπ ${YELLOW}Postiz:${NC} https://${POSTIZ_HOST}"
    echo -e "   - ${YELLOW}–õ–æ–≥–∏–Ω:${NC} ${LETSENCRYPT_EMAIL}"
    echo -e "   - ${YELLOW}–ü–∞—Ä–æ–ª—å:${NC} ${POSTIZ_ADMIN_PASSWORD}"
    echo -e "-----------------------------------------------------------------"
    echo -e "\n–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã –∏–∑ –ø–∞–ø–∫–∏ /opt/content-factory:"
    echo -e "  'docker-compose logs -f' - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
    echo -e "  'docker-compose down'    - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–æ–¥"
    echo -e "\n${GREEN}–£–¥–∞—á–Ω—ã—Ö –ø–æ–ª–µ—Ç–æ–≤, –±—Ä–æ! –¢–µ–ø–µ—Ä—å —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–æ—Ä —Å–∫—Ä–∏–ø—Ç–æ–≤. –≠—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ–¥—É–∫—Ç.${NC}"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
